// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gold_rpc.proto

package goldrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SyncRequest struct {
	Data                 *SyncData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SyncRequest) Reset()         { *m = SyncRequest{} }
func (m *SyncRequest) String() string { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()    {}
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_860aae571b0964f2, []int{0}
}

func (m *SyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRequest.Unmarshal(m, b)
}
func (m *SyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRequest.Marshal(b, m, deterministic)
}
func (m *SyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRequest.Merge(m, src)
}
func (m *SyncRequest) XXX_Size() int {
	return xxx_messageInfo_SyncRequest.Size(m)
}
func (m *SyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRequest proto.InternalMessageInfo

func (m *SyncRequest) GetData() *SyncData {
	if m != nil {
		return m.Data
	}
	return nil
}

type SyncResponse struct {
	Data                 *SyncData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SyncResponse) Reset()         { *m = SyncResponse{} }
func (m *SyncResponse) String() string { return proto.CompactTextString(m) }
func (*SyncResponse) ProtoMessage()    {}
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860aae571b0964f2, []int{1}
}

func (m *SyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncResponse.Unmarshal(m, b)
}
func (m *SyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncResponse.Marshal(b, m, deterministic)
}
func (m *SyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncResponse.Merge(m, src)
}
func (m *SyncResponse) XXX_Size() int {
	return xxx_messageInfo_SyncResponse.Size(m)
}
func (m *SyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncResponse proto.InternalMessageInfo

func (m *SyncResponse) GetData() *SyncData {
	if m != nil {
		return m.Data
	}
	return nil
}

type SyncData struct {
	// the sender of data (service name).
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// data source endpoint.
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// the timestamp of data generation.
	Timestamp int64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// real transfer data in json string format.
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncData) Reset()         { *m = SyncData{} }
func (m *SyncData) String() string { return proto.CompactTextString(m) }
func (*SyncData) ProtoMessage()    {}
func (*SyncData) Descriptor() ([]byte, []int) {
	return fileDescriptor_860aae571b0964f2, []int{2}
}

func (m *SyncData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncData.Unmarshal(m, b)
}
func (m *SyncData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncData.Marshal(b, m, deterministic)
}
func (m *SyncData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncData.Merge(m, src)
}
func (m *SyncData) XXX_Size() int {
	return xxx_messageInfo_SyncData.Size(m)
}
func (m *SyncData) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncData.DiscardUnknown(m)
}

var xxx_messageInfo_SyncData proto.InternalMessageInfo

func (m *SyncData) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SyncData) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SyncData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SyncData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*SyncRequest)(nil), "goldrpc.SyncRequest")
	proto.RegisterType((*SyncResponse)(nil), "goldrpc.SyncResponse")
	proto.RegisterType((*SyncData)(nil), "goldrpc.SyncData")
}

func init() { proto.RegisterFile("gold_rpc.proto", fileDescriptor_860aae571b0964f2) }

var fileDescriptor_860aae571b0964f2 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x5d, 0x77, 0xa9, 0xed, 0xb4, 0x28, 0x0e, 0x2a, 0x4b, 0xf1, 0x50, 0x17, 0x84, 0x9e,
	0x72, 0xa8, 0xf6, 0xe6, 0xa9, 0x0a, 0x5e, 0x4b, 0x7c, 0x00, 0x89, 0x49, 0x28, 0x0b, 0x69, 0x32,
	0x26, 0xf1, 0xe0, 0xdb, 0x4b, 0xb2, 0x51, 0xd1, 0x53, 0x6f, 0xf3, 0xff, 0xf8, 0xc1, 0xcc, 0xc0,
	0xe9, 0xce, 0x19, 0xf5, 0xea, 0x49, 0x32, 0xf2, 0x2e, 0x3a, 0x3c, 0x49, 0xda, 0x93, 0xec, 0xee,
	0x61, 0xfa, 0xf2, 0x69, 0x25, 0xd7, 0xef, 0x1f, 0x3a, 0x44, 0xbc, 0x85, 0x46, 0x89, 0x28, 0xda,
	0x6a, 0x51, 0x2d, 0xa7, 0xab, 0x73, 0x56, 0x6a, 0x2c, 0x75, 0x9e, 0x44, 0x14, 0x3c, 0xc7, 0xdd,
	0x1a, 0x66, 0x03, 0x15, 0xc8, 0xd9, 0xa0, 0x0f, 0xc5, 0x08, 0xc6, 0xdf, 0x0e, 0x5e, 0xc1, 0x28,
	0x68, 0xab, 0xb4, 0xcf, 0xd0, 0x84, 0x17, 0x85, 0x73, 0x18, 0x6b, 0xab, 0xc8, 0xf5, 0x36, 0xb6,
	0xc7, 0x39, 0xf9, 0xd1, 0x78, 0x0d, 0x93, 0xd8, 0xef, 0x75, 0x88, 0x62, 0x4f, 0x6d, 0xbd, 0xa8,
	0x96, 0x35, 0xff, 0x35, 0x10, 0xcb, 0x12, 0x4d, 0xa6, 0xf2, 0xbc, 0x7a, 0x80, 0x9a, 0x93, 0xc4,
	0x35, 0x34, 0x8f, 0xc2, 0x18, 0xbc, 0xf8, 0xb3, 0x59, 0x39, 0x7a, 0x7e, 0xf9, 0xcf, 0x1d, 0x8e,
	0xea, 0x8e, 0x36, 0x37, 0x70, 0xd6, 0x3b, 0xb6, 0x4b, 0x49, 0x69, 0x6c, 0x66, 0xcf, 0xce, 0x28,
	0x4e, 0x72, 0x9b, 0xde, 0xb8, 0xad, 0xde, 0x46, 0xf9, 0x9f, 0x77, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x92, 0x76, 0xe6, 0xf5, 0x61, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcClient is the client API for Rpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcClient interface {
	Call(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error)
}

type rpcClient struct {
	cc *grpc.ClientConn
}

func NewRpcClient(cc *grpc.ClientConn) RpcClient {
	return &rpcClient{cc}
}

func (c *rpcClient) Call(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*SyncResponse, error) {
	out := new(SyncResponse)
	err := c.cc.Invoke(ctx, "/goldrpc.Rpc/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcServer is the server API for Rpc service.
type RpcServer interface {
	Call(context.Context, *SyncRequest) (*SyncResponse, error)
}

func RegisterRpcServer(s *grpc.Server, srv RpcServer) {
	s.RegisterService(&_Rpc_serviceDesc, srv)
}

func _Rpc_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goldrpc.Rpc/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcServer).Call(ctx, req.(*SyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goldrpc.Rpc",
	HandlerType: (*RpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _Rpc_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gold_rpc.proto",
}
